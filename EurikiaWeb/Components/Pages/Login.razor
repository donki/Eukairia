@page "/"
@rendermode InteractiveServer
@layout Layout.LoginLayout
@using EukairiaWeb.Services

@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject UsersService UsersService

@inject ProtectedSessionStorage SessionStorage

<MyMudThemeProvider />
<MudSnackbarProvider />


<div style="display: flex; justify-content: center; align-items: center; height: 100vh;">
    <MudPaper Class="pa-4" Elevation="1" Square="true" MinWidth="600px" Style="margin: auto;">
        <img src="images/Eukairia.webp" alt="Logo" style="max-width: 150px; margin-bottom: 20px;" />
        <MudText Typo="Typo.h5" GutterBottom="true">Iniciar sesión</MudText>
        <MudForm>
            <MudTextField @bind-Value="username" Label="Nombre de usuario" Variant="Variant.Filled" FullWidth="true" />
            <MudTextField @bind-Value="password" Label="Contraseña" Variant="Variant.Filled" FullWidth="true" InputType="InputType.Password" Class="mt-4" />
            <MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="DoLogin" FullWidth="true" Class="mt-4">Iniciar Sesión</MudButton>
        </MudForm>
    </MudPaper>
</div>

@code {
    private string username;
    private string password;

    private async Task DoLogin()
    {
        var validated = UsersService.ValidateUser(username, password);
        if (validated)
        {
            NavigationManager.NavigateTo("/home");
            var expiration = DateTime.Now.AddSeconds(5);
            var user = UsersService.GetUserByEmail(username);
            await SessionStorage.SetAsync("sessionExpiration", expiration);
            await SessionStorage.SetAsync("isAuthenticated", true);
            await SessionStorage.SetAsync("sessionData", username);
            await SessionStorage.SetAsync("UserId", user.UserId);

        }
        else
        {
            Snackbar.Add("Credenciales no válidas", Severity.Error);
        }
    }
}
